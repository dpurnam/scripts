#!/bin/bash
# WakeMyPotata emergency RAID/system safe shutdown
# For battery-powered devices only
# https://github.com/dpurnam/scripts/tree/main/WakeMyPotata

version="v2.1.3"
SERVICE_FILE="/etc/systemd/system/wmp.service"

get_threshold() {
    awk -F' ' '/^# threshold / {print $3}' "$SERVICE_FILE"
}

set_threshold() {
    local new_threshold="$1"
    # Remove old threshold line, add new
    sed -i "/^# threshold /d" "$SERVICE_FILE"
    sed -i "/^ExecStart=/a # threshold $new_threshold (Do not Modify this auto-generated line!)" "$SERVICE_FILE"
    systemctl daemon-reload
}

get_timeout() {
    awk -F' ' '/^ExecStart=/{split($2,x," "); print x[2]}' "$SERVICE_FILE"
}

set_timeout() {
    local new_timeout="$1"
    sed -i "s|^ExecStart=.*|ExecStart=/usr/local/sbin/wmp-run $new_timeout|" "$SERVICE_FILE"
    systemctl daemon-reload
}

if [[ "$1" == "help" ]]; then
    echo ""
    echo "  WakeMyPotata user commands:"
    echo ""
    echo "  sudo wmp help                        Show this help message"
    echo "  sudo wmp version                     Print the software version"
    echo "  sudo wmp status                      Check the service status"
    echo "  sudo wmp log                         View warning logs"
    echo "  sudo wmp battery                     Show battery status"
    echo "  sudo wmp threshold                   Show battery level threshold in %"
    echo "  sudo wmp threshold set <percent>     Set battery level threshold in % (10-50)"
    echo "  sudo wmp timeout                     Show timeout value (seconds)"
    echo "  sudo wmp timeout set <seconds>       Set new timeout value"
    echo "  sudo wmp run <seconds>               Run a manual check"
    echo "  sudo wmp stop                        Stop the service"
    echo "  sudo wmp start                       Start the service"
    echo "  sudo wmp uninstall                   Uninstall the service"
    echo ""
    echo "  NOTE: WakeMyPotata only works on devices with a battery."
    echo ""

elif [[ "$1" == "version" ]]; then
    echo "$version"

elif [[ "$1" == "status" ]]; then
    echo "WakeMyPotata status:"
    tail -n 1 "$SERVICE_FILE"
    systemctl status wmp.timer

elif [[ "$1" == "log" ]]; then
    sudo journalctl -u wmp -p warning -r

elif [[ "$1" == "battery" ]]; then
    if ! command -v upower &>/dev/null; then
        echo "upower not available. Try: sudo apt-get install upower"
        exit 1
    fi
    BAT_PATH=$(upower -e 2>/dev/null | grep -m1 BAT || true)
    if [ -n "$BAT_PATH" ]; then
        upower -i "$BAT_PATH" | grep -E 'state|percentage|time to empty|time to full'
    else
        echo "No battery detected on this device. WakeMyPotata will not run."
    fi

elif [[ "$1" == "threshold" ]]; then
    echo "Battery threshold: $(get_threshold)%"

elif [[ "$1" == "threshold" && "$2" == "set" ]]; then
    echo "Usage: sudo wmp threshold set <percent>"
    echo "       percent should be a number between 10 and 50"
    exit 1

elif [[ "$1" == "threshold" && "$2" == "set" && -n "$3" ]]; then
    if [[ ! "$3" =~ ^[0-9]+$ ]] || (( $3 < 10 || $3 > 50 )); then
        echo "Invalid input, please enter a positive integer between 10 and 50! Aborting..."
        exit 1
    fi
    set_threshold "$3"
    echo "Threshold updated successfully to $3%!"

elif [[ "$1" == "timeout" ]]; then
    echo "Timeout: $(get_timeout) seconds"

elif [[ "$1" == "timeout" && "$2" == "set" ]]; then
    echo "Usage: sudo wmp timeout set <seconds>"
    exit 1

elif [[ "$1" == "timeout" && "$2" == "set" && -n "$3" ]]; then
    if [[ ! "$3" =~ ^[0-9]+$ ]] || (( $3 < 1 )); then
        echo "Invalid input, please enter a positive integer (seconds)! Aborting..."
        exit 1
    fi
    set_timeout "$3"
    echo "Timeout updated successfully to $3 seconds!"

elif [[ "$1" == "set" && -n "$2" ]]; then
    if [[ ! "$2" =~ ^[0-9]+$ ]] || (( $2 < 1 )); then
        echo "Invalid input, please enter a positive integer! Aborting..."
        exit 1
    fi
    set_timeout "$2"
    echo "Configuration updated successfully!"

elif [[ "$1" == "run" && -n "$2" ]]; then
    if [[ ! "$2" =~ ^[0-9]+$ ]] || (( $2 < 1 )); then
        echo "Invalid input, please enter a positive integer! Aborting..."
        exit 1
    fi
    /usr/local/sbin/wmp-run "$2"

elif [[ "$1" == "stop" ]]; then
    systemctl stop wmp.timer
    systemctl disable wmp.timer
    systemctl daemon-reload

elif [[ "$1" == "start" ]]; then
    systemctl daemon-reload
    systemctl enable wmp.timer
    systemctl start wmp.timer

elif [[ "$1" == "uninstall" ]]; then
    echo "Removing WakeMyPotata..."
    systemctl stop wmp.timer
    systemctl disable wmp.timer
    rm -rf /etc/systemd/system/wmp.* /usr/local/sbin/wmp-run /usr/local/sbin/wmp
    systemctl daemon-reload
    echo "All clear."

else
    echo "Invalid command. Use 'sudo wmp help' to see available commands."
fi
